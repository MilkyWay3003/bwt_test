https://github.com/MilkyWay3003/bwt_test

- создать аккаунт на github.com (если его нет )

- создать проект bwt_test

- все изменения в коде вести через git.

- создать 4 страницы с одной точкой входа.

- при создании страниц использовать Model-view-controller(собственная реализация, без фреймворков).

страница 1 - форма регистрации.
Поля: имя, фамилия, email, пол, день рождения
(пол и день рождения - необязательные поля. валидация должна быть и на стороне клиента, и на стороне сервера)

страница 2 - отображать погоду на сегодня в городе Запорожье
(только зарегистрированные пользователи имеют доступ).

Данные парсить по этойссылке http://www.gismeteo.ua/city/daily/5093/
страница 3 - форма обратной связи. поля: имя, email, сообщение
(все поля обязательные, валидация должна быть и на стороне клиента, и на стороне сервера).
Также добавить капчу.
Когда пользователи отправляют форму со встроенной проверкой reCAPTCHA, вместе с прочими данными 

вы получаете строку "g-recaptcha-response".
Чтобы узнать, прошел ли пользователь проверку, отправьте POST-запрос со следующими параметрами:
secret  6Lfh6GQUAAAAAJcFpEk5wdakPmnmxgdkp_anQKv0
response  g-recaptcha-response
https://www.google.com/recaptcha/api/siteverify

страница 4 - отображать список фидбеков, оставленных на странице 3.
(только зарегистрированные пользователи имеют доступ)

- для верстки использовать плагин bootstrap 3.
- для парсинга погоды можно использовать пакет guzzle ( https://github.com/guzzle/guzzle )
- создать ER-диаграму структуры созданной базы данных. Так же положить ее в git.
- прислать нам ссылку на github проект.

